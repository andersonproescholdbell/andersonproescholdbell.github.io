---
export interface Props {
  title: string;
  description: string;
  link: string;
  image: string;
  tags: string[];
  color: 'sky' | 'emerald' | 'red' | 'indigo' | 'purple' | 'amber' | 'pink';
}

const { title, description, link, image, tags, color } = Astro.props;

const colorClasses = {
  sky: 'hover:shadow-sky-500/20 bg-sky-900 text-sky-300',
  emerald: 'hover:shadow-emerald-500/20 bg-emerald-900 text-emerald-300',
  red: 'hover:shadow-red-500/20 bg-red-900 text-red-300',
  indigo: 'hover:shadow-indigo-500/20 bg-indigo-900 text-indigo-300',
  purple: 'hover:shadow-purple-500/20 bg-purple-900 text-purple-300',
  amber: 'hover:shadow-amber-500/20 bg-amber-900 text-amber-300',
  pink: 'hover:shadow-pink-500/20 bg-pink-900 text-pink-300'
};

const hoverColor = colorClasses[color].split(' ')[0];
const tagClasses = colorClasses[color].split(' ').slice(1).join(' ');
---

<a href={link}
  class={`group block bg-gray-800 rounded-lg shadow-lg ${hoverColor} hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 overflow-hidden`}>
  <div class="overflow-hidden">
    <img src={image}
      alt={`Screenshot of ${title}`}
      class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
      onerror="this.onerror=null;this.src='https://placehold.co/600x400/1f2937/9ca3af?text=Project+Image';">
  </div>
  <div class="p-6 flex flex-col justify-between min-h-full">
    <div>
      <h3 class="text-xl font-bold mb-2 text-white">{title}</h3>
      <p class="text-gray-400 mb-4">{description}</p>
    </div>
    <div class="flex flex-wrap gap-2 mt-4">
      {tags.map(tag => (
        <span class={`text-xs font-semibold ${tagClasses} px-2 py-1 rounded-full`}>
          {tag}
        </span>
      ))}
    </div>
  </div>
</a>